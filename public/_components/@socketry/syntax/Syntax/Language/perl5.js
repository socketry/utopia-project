import {Language} from '../Language.js';
import {Rule} from '../Rule.js';

const language = new Language('perl5');

const builtins = [
	'abs',
	'accept',
	'alarm',
	'atan2',
	'bind',
	'binmode',
	'chdir',
	'chmod',
	'chomp',
	'chop',
	'chown',
	'chr',
	'chroot',
	'close',
	'closedir',
	'connect',
	'cos',
	'crypt',
	'defined',
	'delete',
	'each',
	'endgrent',
	'endhostent',
	'endnetent',
	'endprotoent',
	'endpwent',
	'endservent',
	'eof',
	'exec',
	'exists',
	'exp',
	'fcntl',
	'fileno',
	'flock',
	'fork',
	'format',
	'formline',
	'getc',
	'getgrent',
	'getgrgid',
	'getgrnam',
	'gethostbyaddr',
	'gethostbyname',
	'gethostent',
	'getlogin',
	'getnetbyaddr',
	'getnetbyname',
	'getnetent',
	'getpeername',
	'getpgrp',
	'getppid',
	'getpriority',
	'getprotobyname',
	'getprotobynumber',
	'getprotoent',
	'getpwent',
	'getpwnam',
	'getpwuid',
	'getservbyname',
	'getservbyport',
	'getservent',
	'getsockname',
	'getsockopt',
	'glob',
	'gmtime',
	'grep',
	'hex',
	'index',
	'int',
	'ioctl',
	'join',
	'keys',
	'kill',
	'lc',
	'lcfirst',
	'length',
	'link',
	'listen',
	'localtime',
	'lock',
	'log',
	'lstat',
	'map',
	'mkdir',
	'msgctl',
	'msgget',
	'msgrcv',
	'msgsnd',
	'oct',
	'open',
	'opendir',
	'ord',
	'pack',
	'pipe',
	'pop',
	'pos',
	'print',
	'printf',
	'prototype',
	'push',
	'quotemeta',
	'rand',
	'read',
	'readdir',
	'readline',
	'readlink',
	'readpipe',
	'recv',
	'rename',
	'reset',
	'reverse',
	'rewinddir',
	'rindex',
	'rmdir',
	'scalar',
	'seek',
	'seekdir',
	'select',
	'semctl',
	'semget',
	'semop',
	'send',
	'setgrent',
	'sethostent',
	'setnetent',
	'setpgrp',
	'setpriority',
	'setprotoent',
	'setpwent',
	'setservent',
	'setsockopt',
	'shift',
	'shmctl',
	'shmget',
	'shmread',
	'shmwrite',
	'shutdown',
	'sin',
	'sleep',
	'socket',
	'socketpair',
	'sort',
	'splice',
	'split',
	'sprintf',
	'sqrt',
	'srand',
	'stat',
	'study',
	'substr',
	'symlink',
	'syscall',
	'sysopen',
	'sysread',
	'sysseek',
	'system',
	'syswrite',
	'tell',
	'telldir',
	'time',
	'times',
	'tr',
	'truncate',
	'uc',
	'ucfirst',
	'umask',
	'undef',
	'unlink',
	'unpack',
	'unshift',
	'utime',
	'values',
	'vec',
	'wait',
	'waitpid',
	'warn',
	'write'
];

const keywords = [
	'bless',
	'caller',
	'continue',
	'die',
	'do',
	'dump',
	'else',
	'elsif',
	'eval',
	'exit',
	'for',
	'foreach',
	'goto',
	'if',
	'import',
	'last',
	'local',
	'my',
	'next',
	'no',
	'our',
	'package',
	'redo',
	'ref',
	'require',
	'return',
	'sub',
	'tie',
	'tied',
	'unless',
	'untie',
	'until',
	'use',
	'wantarray',
	'while'
];

const operators = [
	'<=>',
	'...',
	'->',
	'++',
	'--',
	'**',
	'=~',
	'!~',
	'<<',
	'>>',
	'<=',
	'>=',
	'==',
	'!=',
	'&&',
	'||',
	'//',
	'..',
	'=>',
	'!',
	'~',
	'\\',
	'+',
	'-',
	'*',
	'/',
	'%',
	'x',
	'.',
	'<',
	'>',
	'lt',
	'gt',
	'le',
	'ge',
	'eq',
	'ne',
	'cmp',
	'~~',
	'&',
	'|',
	'^',
	'?:',
	'=',
	',',
	'not',
	'and',
	'or',
	'xor'
];

const values = ['this', 'true', 'false'];

language.push(values, {type: 'constant'});
language.push(keywords, {type: 'keyword'});
language.push(operators, {type: 'operator'});
language.push(builtins, {type: 'function'});

// Regular expressions
language.push(Rule.perlStyleRegularExpression);

// Comments
language.push(Rule.perlStyleComment);
language.push(Rule.webLink);

// Variables
language.push({
	pattern: /(\$|@|%)\w+/i,
	type: 'variable'
});

// Enddoc
language.push({
	pattern: /__END__[\s\S]*/m,
	type: 'comment'
});

// Strings
language.push(Rule.singleQuotedString);
language.push(Rule.doubleQuotedString);
language.push(Rule.stringEscape);

// Numbers
language.push(Rule.decimalNumber);
language.push(Rule.hexNumber);

// Functions
language.push(Rule.cStyleFunction);

export default function register(syntax) {
	syntax.register('perl5', language);
	syntax.alias('perl5', ['perl', 'pl']);
}
