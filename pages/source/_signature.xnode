<?r
	base = self[:base]
	symbol = self[:symbol]
	documentation = symbol&.documentation
	
	if documentation.children?
?>
<details open>
	<summary><h4>Signature</h4></summary>
	<dl><?r
		documentation.traverse do |node, descend|
			node.each do |child|
				next if child.is_a?(Decode::Comment::Pragma)
				?><dt>
					<strong>#{child.directive}</strong><?r
						case child
						when Decode::Comment::Parameter
							?>　<code class="syntax">#{child.name}</code>　#{base.linkify(child.type, symbol)}<?r
						when Decode::Comment::Returns, Decode::Comment::Attribute
							?>　#{base.linkify(child.type, symbol)}<?r
						when Decode::Comment::Yields
							?>　<code class="syntax language-#{symbol.language.name}">#{child.block}</code><?r
						end
				?></dt><?r
				
				if text = child.text
					?><dd>#{base.format(text, symbol)}</dd><?r
				end
				
				if child.children?
					?><dd><dl>
						<?r descend.call(child) ?>
					</dl></dd><?r
				end
			end
		end
	?></dl>
</details>
<?r
	end
?>